%% -*- tab-width: 4;erlang-indent-level: 4;indent-tabs-mode: nil -*-
%% ex: ft=erlang ts=4 sw=4 et

{sys,
    [
        % typical defaults
        {profile, embedded},
        {incl_cond, derived},
        {mod_cond, all},
        {app_file, keep},
        {excl_sys_filters, ["^bin/.*",
                            "^erts.*/bin/(dialyzer|typer)",
                            "^erts.*/(doc|info|include|lib|man|src)"]},

        % keep beam files exposed for module loading of internal services
        {excl_archive_filters, [".*"]},

        % Erlang dependencies
        {erts,
         [{incl_cond, derived}, {mod_cond, all}, {app_file, keep}]},
        {app, hipe,
         [{incl_cond, exclude}]},
        % sometimes services need the debug_info within OTP applications
        {debug_info, keep},
        %{app, debugger,
        % [{incl_cond, include}, {mod_cond, all}, {app_file, keep}]},
        {app, sasl,
         [{incl_cond, include}, {mod_cond, all}, {app_file, keep}]},

        {boot_rel, "coffer"},
        % coffer source code, including dependencies
        {app, coffer,
         [{incl_cond, include}, {mod_cond, all}, {app_file, keep}]},

        {app, coffer_client,
         [{incl_cond, include}, {mod_cond, all}, {app_file, keep}]},

        % application directories
        {lib_dirs,
         [
                "build/apps",
                "build/deps"
        ]},

        % application startup for release generation
        {rel, "coffer", "1",
         [
                % Erlang
                sasl,
                stdlib,
                kernel,
                goldrush,
                lager,

                % coffer
                coffer,
                coffer_client
                ]},
        {rel, "start_clean", "",
         [
                kernel,
                stdlib
                ]}
        ]}.

{target_dir, "rel/coffer"}.

{overlay,
    [
        {mkdir, "bin"},
        {mkdir, "etc"},
        {copy, "rel/files/app.config", "etc/app.config"},
        {copy, "rel/files/erl", "{{erts_vsn}}/bin/erl"},
        {copy, "rel/files/nodetool", "{{erts_vsn}}/bin/nodetool"},
        {copy, "rel/files/install_upgrade.escript", "bin/install_upgrade.escript"},
        {copy, "rel/files/coffer", "bin/coffer"},
        {copy, "rel/files/vm.args", "etc/vm.args"},
        % windows scripts
        {copy, "rel/files/coffer.cmd", "bin/coffer.cmd"},
        {copy, "rel/files/start_erl.cmd", "bin/start_erl.cmd"}
    ]}.
